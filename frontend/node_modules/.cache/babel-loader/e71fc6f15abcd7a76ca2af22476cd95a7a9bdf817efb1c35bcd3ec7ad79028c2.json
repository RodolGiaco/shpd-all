{"ast":null,"code":"var _jsxFileName = \"/home/rodo-giaco/git/rodo/shpd-gpt/cluster/frontend/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport PostureCard from \"./components/PostureCard\";\nimport SessionInfo from \"./components/SessionInfo\";\nimport HistoryChart from \"./components/HistoryChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      // 🧪 Simulación de WebSocket con datos randomizados\n      const simulated = {\n        timestamp: new Date().toISOString(),\n        session: {\n          intervalo_segundos: 600,\n          tiempo_transcurrido: Math.floor(Math.random() * 600),\n          modo: \"monitor_activo\"\n        },\n        postura: {\n          actual: \"mentón en mano\",\n          transiciones_malas: Math.floor(Math.random() * 10),\n          porcentaje_correcta: Math.random() * 100,\n          porcentaje_incorrecta: Math.random() * 100,\n          tiempo_parado: Math.floor(Math.random() * 200),\n          tiempo_sentado: Math.floor(Math.random() * 400),\n          alertas_enviadas: Math.floor(Math.random() * 5)\n        },\n        historial_postural: [{\n          nombre: \"sentado erguido\",\n          conteo: 65\n        }, {\n          nombre: \"mentón en mano\",\n          conteo: 12\n        }, {\n          nombre: \"slouching\",\n          conteo: 5\n        }, {\n          nombre: \"inclinación adelante\",\n          conteo: 3\n        }]\n      };\n      setData(simulated);\n    }, 3000);\n    return () => clearInterval(interval);\n  }, []);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 text-center text-gray-500\",\n    children: \"Cargando m\\xE9tricas...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"min-h-screen bg-gray-100 p-6 grid gap-6 grid-cols-1 md:grid-cols-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"md:col-span-2 space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(PostureCard, {\n        postura: data.postura\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HistoryChart, {\n        historial: data.historial_postural\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SessionInfo, {\n      session: data.session\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","PostureCard","SessionInfo","HistoryChart","jsxDEV","_jsxDEV","App","_s","data","setData","interval","setInterval","simulated","timestamp","Date","toISOString","session","intervalo_segundos","tiempo_transcurrido","Math","floor","random","modo","postura","actual","transiciones_malas","porcentaje_correcta","porcentaje_incorrecta","tiempo_parado","tiempo_sentado","alertas_enviadas","historial_postural","nombre","conteo","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","historial","_c","$RefreshReg$"],"sources":["/home/rodo-giaco/git/rodo/shpd-gpt/cluster/frontend/frontend/src/App.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { PosturaMessage } from \"./types\";\nimport PostureCard from \"./components/PostureCard\";\nimport SessionInfo from \"./components/SessionInfo\";\nimport HistoryChart from \"./components/HistoryChart\";\n\nexport default function App() {\n  const [data, setData] = useState<PosturaMessage | null>(null);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      // 🧪 Simulación de WebSocket con datos randomizados\n      const simulated: PosturaMessage = {\n        timestamp: new Date().toISOString(),\n        session: {\n          intervalo_segundos: 600,\n          tiempo_transcurrido: Math.floor(Math.random() * 600),\n          modo: \"monitor_activo\",\n        },\n        postura: {\n          actual: \"mentón en mano\",\n          transiciones_malas: Math.floor(Math.random() * 10),\n          porcentaje_correcta: Math.random() * 100,\n          porcentaje_incorrecta: Math.random() * 100,\n          tiempo_parado: Math.floor(Math.random() * 200),\n          tiempo_sentado: Math.floor(Math.random() * 400),\n          alertas_enviadas: Math.floor(Math.random() * 5),\n        },\n        historial_postural: [\n          { nombre: \"sentado erguido\", conteo: 65 },\n          { nombre: \"mentón en mano\", conteo: 12 },\n          { nombre: \"slouching\", conteo: 5 },\n          { nombre: \"inclinación adelante\", conteo: 3 },\n        ],\n      };\n\n      setData(simulated);\n    }, 3000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  if (!data) return <div className=\"p-6 text-center text-gray-500\">Cargando métricas...</div>;\n\n  return (\n    <main className=\"min-h-screen bg-gray-100 p-6 grid gap-6 grid-cols-1 md:grid-cols-3\">\n      <section className=\"md:col-span-2 space-y-4\">\n        <PostureCard postura={data.postura} />\n        <HistoryChart historial={data.historial_postural} />\n      </section>\n      <SessionInfo session={data.session} />\n    </main>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}